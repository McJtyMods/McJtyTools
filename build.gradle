
// For those who want the bleeding edge
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//plugins {
    //id 'com.matthewprenger.cursegradle' version '1.1.0'
//}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { // Patchouli
        url "https://maven.blamejared.com"
    }
    maven {
        name 'OC Repo'
        url "http://maven.cil.li/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { // McJtyLib
        url "http://maven.k-4u.nl"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "TESLA"
        url = "https://maven.mcmoddev.com"
    }
}


group= "com.github.mcjty" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcjtytools"

if (System.getenv('BUILD_NUMBER') != null) {
    version += ".${System.getenv('BUILD_NUMBER')}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"
}


dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest {
        attributes 'FMLModType': 'LIBRARY',
        "Specification-Title": "mcjtytools",
        "Specification-Vendor": "McJty",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"McJty",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}



task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'McJtyTools'
                            scm {
                                url 'https://github.com/McJtyMods/McJtyTools'
                                connection 'scm:git:git@github.com:McJtyMods/McJtyTools.git'
                                developerConnection 'scm:git:git@github.com:McJtyMods/McJtyTools.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/McJtyMods/McJtyTools/issues'
                            }
                            licenses {
                                license {
                                    name 'MIT'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'McJty'
                                    name 'McJty'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
